{"version":3,"sources":["components/Wrapper/Wrapper.tsx","components/Nav/Nav.tsx","components/Header/Header.tsx","pages/HomePage.tsx","components/Spinner/Spinner.tsx","lib/api/people.ts","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","lib/hooks/usePeople.ts","pages/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Wrapper","children","className","Nav","classNames","to","isActive","Header","HomePage","Spinner","wait","delay","Promise","resolve","setTimeout","getPeople","a","fetch","response","ok","Error","status","statusText","json","PersonRow","name","sex","born","died","motherName","fatherName","PeopleTable","people","map","person","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasLoadingError","setHasLoadingError","useEffect","fetchPeople","peopleFromServer","usePeople","NotFoundPage","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6044ba8.chunk.js","sourcesContent":["import './Wrapper.scss';\n\nexport const Wrapper: React.FC = ({ children }) => {\n  return <div className=\"Wrapper\">{children}</div>;\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nimport { Wrapper } from '../Wrapper';\n\nimport './Nav.scss';\n\ntype Props = {\n  className: string;\n};\n\nexport const Nav: React.FC<Props> = ({ className }) => {\n  return (\n    <nav className={classNames('Nav', className)}>\n      <Wrapper>\n        <ul className=\"Nav__list\">\n          <li className=\"Nav__item\">\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) => classNames('Nav__link', { 'Nav__link--active': isActive })}\n            >\n              Home\n            </NavLink>\n          </li>\n\n          <li className=\"Nav__item\">\n            <NavLink\n              to=\"people\"\n              className={({ isActive }) => classNames('Nav__link', { 'Nav__link--active': isActive })}\n            >\n              People\n            </NavLink>\n          </li>\n        </ul>\n      </Wrapper>\n    </nav>\n  );\n};\n","import { Nav } from '../Nav';\nimport './Header.scss';\n\nexport const Header = () => {\n  return (\n    <header className=\"Header\">\n      <Nav className=\"Header__nav\" />\n    </header>\n  );\n};\n","import { Wrapper } from '../components/Wrapper';\n\nexport const HomePage = () => {\n  return (\n    <section className=\"HomePage\">\n      <Wrapper>\n        <h1>Home Page</h1>\n      </Wrapper>\n    </section>\n  );\n};\n","import './Spinner.scss';\n\nexport const Spinner = () => {\n  return (\n    <>\n      <span className=\"material spinner\" />\n    </>\n  );\n};\n","import { Person } from '../../types/Person';\n\nconst wait = (delay: number): Promise<typeof delay> => {\n  return new Promise((resolve) => {\n    setTimeout(() => resolve(delay), delay);\n  });\n};\n\nexport const getPeople = async (): Promise<Person[]> => {\n  await wait(1000);\n\n  const response = await fetch(\n    'https://mate-academy.github.io/react_people-table/api/people.json',\n  );\n\n  if (!response.ok) {\n    throw new Error(`${response.status}: ${response.statusText}`);\n  }\n\n  return response.json();\n};\n","import classNames from 'classnames';\nimport { Person } from '../../types/Person';\n\nimport './PersonRow.scss';\n\ntype Props = { className?: string } & Person;\n\nexport const PersonRow: React.FC<Props> = ({\n  name,\n  sex,\n  born,\n  died,\n  motherName,\n  fatherName,\n  className,\n}) => {\n  return (\n    <tr className={classNames('PersonRow', className)}>\n      <td className=\"PersonRow__row-data\">{name}</td>\n      <td className=\"PersonRow__row-data\">{sex}</td>\n      <td className=\"PersonRow__row-data\">{born}</td>\n      <td className=\"PersonRow__row-data\">{died}</td>\n      <td className=\"PersonRow__row-data\">{motherName || 'Unknown'}</td>\n      <td className=\"PersonRow__row-data\">{fatherName || 'Unknown'}</td>\n    </tr>\n  );\n};\n","import classNames from 'classnames';\nimport { Person } from '../../types/Person';\nimport { PersonRow } from '../PersonRow';\n\nimport './PeopleTable.scss';\n\ntype Props = {\n  people: Person[];\n  className?: string;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, className }) => {\n  return (\n    <table className={classNames('PeopleTable', className)}>\n      <thead className=\"PeopleTable__header\">\n        <tr>\n          <th className=\"PeopleTable__header-data\">Name</th>\n          <th className=\"PeopleTable__header-data\">Sex</th>\n          <th className=\"PeopleTable__header-data\">Born</th>\n          <th className=\"PeopleTable__header-data\">Died</th>\n          <th className=\"PeopleTable__header-data\">Mother</th>\n          <th className=\"PeopleTable__header-data\">Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {people.map((person) => (\n          <PersonRow\n            key={person.name}\n            {...person}\n            className=\"PeopleTable__row\"\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Wrapper } from '../components/Wrapper';\nimport { Spinner } from '../components/Spinner';\nimport { usePeople } from '../lib/hooks/usePeople';\nimport { PeopleTable } from '../components/PeopleTable';\n\nimport './PeoplePage.scss';\n\nexport const PeoplePage = () => {\n  const { people, isLoading, hasLoadingError } = usePeople();\n\n  return (\n    <section className=\"PeoplePage\">\n      <Wrapper>\n        <h1 className=\"PeoplePage__title\">People Page</h1>\n        {hasLoadingError && (\n          <p>\n            We&apos;re sorry, but we couldn&apos;t fetch people from the server\n          </p>\n        )}\n\n        {isLoading && <Spinner />}\n\n        {people && (\n          <PeopleTable people={people} className=\"PeoplePage__people-table\" />\n        )}\n      </Wrapper>\n    </section>\n  );\n};\n","import { useState, useEffect } from 'react';\n\nimport { getPeople } from '../api/people';\nimport { Person } from '../../types/Person';\n\nexport const usePeople = () => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n\n  useEffect(() => {\n    const fetchPeople = async () => {\n      setIsLoading(true);\n\n      try {\n        const peopleFromServer: Person[] = await getPeople();\n\n        setPeople(peopleFromServer);\n      } catch (error) {\n        setHasLoadingError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchPeople();\n  }, []);\n\n  return {\n    people, setPeople, isLoading, hasLoadingError,\n  };\n};\n","import { Wrapper } from '../components/Wrapper';\n\nexport const NotFoundPage = () => {\n  return (\n    <section>\n      <Wrapper>\n        <h1>Page not found | 404</h1>\n      </Wrapper>\n    </section>\n  );\n};\n","import { Routes, Route, Navigate } from 'react-router-dom';\n\nimport { Header } from './components/Header';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nimport './App.scss';\nimport './lib/reset.scss';\n\nconst App = () => (\n  <div className=\"App\">\n    <Header />\n\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n      <Route path=\"/people\" element={<PeoplePage />} />\n      <Route path=\"*\" element={<NotFoundPage />} />\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}